// <auto-generated />
using System;
using LogisticsEntity.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogisticsEntity.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogisticsDataCore.Tables.Category", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryID"));

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("LogisticsDataCore.Tables.Governorate", b =>
                {
                    b.Property<int>("GovernorateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GovernorateID"));

                    b.Property<string>("GovernorateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GovernorateID");

                    b.ToTable("Governorates");

                    b.HasData(
                        new
                        {
                            GovernorateID = 1,
                            GovernorateName = "Alexandria"
                        },
                        new
                        {
                            GovernorateID = 2,
                            GovernorateName = "Aswan"
                        },
                        new
                        {
                            GovernorateID = 3,
                            GovernorateName = "Asyut"
                        },
                        new
                        {
                            GovernorateID = 4,
                            GovernorateName = "Beheira"
                        },
                        new
                        {
                            GovernorateID = 5,
                            GovernorateName = "Beni Suef"
                        },
                        new
                        {
                            GovernorateID = 6,
                            GovernorateName = "Cairo"
                        },
                        new
                        {
                            GovernorateID = 7,
                            GovernorateName = "Dakahlia"
                        },
                        new
                        {
                            GovernorateID = 8,
                            GovernorateName = "Damietta"
                        },
                        new
                        {
                            GovernorateID = 9,
                            GovernorateName = "Faiyum"
                        },
                        new
                        {
                            GovernorateID = 10,
                            GovernorateName = "Gharbia"
                        },
                        new
                        {
                            GovernorateID = 11,
                            GovernorateName = "Giza"
                        },
                        new
                        {
                            GovernorateID = 12,
                            GovernorateName = "Ismailia"
                        },
                        new
                        {
                            GovernorateID = 13,
                            GovernorateName = "Kafr El Sheikh"
                        },
                        new
                        {
                            GovernorateID = 14,
                            GovernorateName = "Luxor"
                        },
                        new
                        {
                            GovernorateID = 15,
                            GovernorateName = "Matrouh"
                        },
                        new
                        {
                            GovernorateID = 16,
                            GovernorateName = "Minya"
                        },
                        new
                        {
                            GovernorateID = 17,
                            GovernorateName = "Monufia"
                        },
                        new
                        {
                            GovernorateID = 18,
                            GovernorateName = "New Valley"
                        },
                        new
                        {
                            GovernorateID = 19,
                            GovernorateName = "North Sinai"
                        },
                        new
                        {
                            GovernorateID = 20,
                            GovernorateName = "Port Said"
                        },
                        new
                        {
                            GovernorateID = 21,
                            GovernorateName = "Qalyubia"
                        },
                        new
                        {
                            GovernorateID = 22,
                            GovernorateName = "Qena"
                        },
                        new
                        {
                            GovernorateID = 23,
                            GovernorateName = "Red Sea"
                        },
                        new
                        {
                            GovernorateID = 24,
                            GovernorateName = "Sharqia"
                        },
                        new
                        {
                            GovernorateID = 25,
                            GovernorateName = "Sohag"
                        },
                        new
                        {
                            GovernorateID = 26,
                            GovernorateName = "South Sinai"
                        },
                        new
                        {
                            GovernorateID = 27,
                            GovernorateName = "Suez"
                        });
                });

            modelBuilder.Entity("LogisticsDataCore.Tables.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("RoleDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            RoleDescription = "Has All The privileges for the current tenant.",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleID = 2,
                            RoleDescription = "Has All The privileges for the current Branch.",
                            RoleName = "Branch Manager"
                        },
                        new
                        {
                            RoleID = 3,
                            RoleDescription = "Can see the materials which is lacking in the branches.",
                            RoleName = "Logistic"
                        });
                });

            modelBuilder.Entity("LogisticsDataCore.Tables.Store", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreID"));

                    b.Property<string>("CreatedDateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreCityLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StoreGovernorateID")
                        .HasColumnType("int");

                    b.Property<int>("StoreManagerID")
                        .HasColumnType("int");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StoreID");

                    b.HasIndex("StoreGovernorateID");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("LogisticsDataCore.Tables.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CreatedDateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsAccepted")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerificationCodeExpireDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            Age = 26,
                            CreatedDateTime = "4/20/2024 5:18:47 PM",
                            Email = "abdalla.ahly@gmail.com",
                            IsVerified = true,
                            PasswordHash = "$2a$11$RxRYtMbeu/P/MCYgenCCmOSLkKJvdNx14HzpJNEfcLBHgcwJwOYUm",
                            Phone = "01096796098",
                            Role = "Admin",
                            UserName = "Admin",
                            VerificationCodeExpireDate = new DateTime(2024, 4, 20, 17, 28, 47, 14, DateTimeKind.Local).AddTicks(8246)
                        });
                });

            modelBuilder.Entity("LogisticsDataCore.Tables.Store", b =>
                {
                    b.HasOne("LogisticsDataCore.Tables.Governorate", null)
                        .WithMany()
                        .HasForeignKey("StoreGovernorateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
